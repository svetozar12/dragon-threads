/*
Fiber Example API

This is a sample swagger for Fiber

API version: 1.0
Contact: fiber@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CommonCommonPaginationSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommonCommonPaginationSchema{}

// CommonCommonPaginationSchema struct for CommonCommonPaginationSchema
type CommonCommonPaginationSchema struct {
	HasNext *bool `json:"hasNext,omitempty"`
	Page *int32 `json:"page,omitempty"`
	PageSize *int32 `json:"pageSize,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewCommonCommonPaginationSchema instantiates a new CommonCommonPaginationSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonCommonPaginationSchema() *CommonCommonPaginationSchema {
	this := CommonCommonPaginationSchema{}
	return &this
}

// NewCommonCommonPaginationSchemaWithDefaults instantiates a new CommonCommonPaginationSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonCommonPaginationSchemaWithDefaults() *CommonCommonPaginationSchema {
	this := CommonCommonPaginationSchema{}
	return &this
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *CommonCommonPaginationSchema) GetHasNext() bool {
	if o == nil || IsNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonCommonPaginationSchema) GetHasNextOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNext) {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *CommonCommonPaginationSchema) HasHasNext() bool {
	if o != nil && !IsNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *CommonCommonPaginationSchema) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *CommonCommonPaginationSchema) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonCommonPaginationSchema) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *CommonCommonPaginationSchema) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *CommonCommonPaginationSchema) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *CommonCommonPaginationSchema) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonCommonPaginationSchema) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *CommonCommonPaginationSchema) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *CommonCommonPaginationSchema) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *CommonCommonPaginationSchema) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommonCommonPaginationSchema) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *CommonCommonPaginationSchema) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *CommonCommonPaginationSchema) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o CommonCommonPaginationSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommonCommonPaginationSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HasNext) {
		toSerialize["hasNext"] = o.HasNext
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableCommonCommonPaginationSchema struct {
	value *CommonCommonPaginationSchema
	isSet bool
}

func (v NullableCommonCommonPaginationSchema) Get() *CommonCommonPaginationSchema {
	return v.value
}

func (v *NullableCommonCommonPaginationSchema) Set(val *CommonCommonPaginationSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonCommonPaginationSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonCommonPaginationSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonCommonPaginationSchema(val *CommonCommonPaginationSchema) *NullableCommonCommonPaginationSchema {
	return &NullableCommonCommonPaginationSchema{value: val, isSet: true}
}

func (v NullableCommonCommonPaginationSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonCommonPaginationSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


